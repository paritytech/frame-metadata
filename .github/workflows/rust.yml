name: Compilation and Testing Suite

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - 'README.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: nightly
            override: true
            components: rustfmt

      - name: Rust Cache
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1

      - name: Cargo fmt
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  docs:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1

      - name: Check internal documentation links
        run: RUSTDOCFLAGS="--deny rustdoc::broken_intra_doc_links" cargo doc -vv --workspace --no-deps --document-private-items

      - name: Run cargo test on documentation
        uses: actions-rs/cargo@v1.0.3
        with:
            command: test
            args: --doc

  tests:
    name: Cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1

      - name: Cargo test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --all-targets --workspace

  clippy:
    name: Cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            components: clippy
            override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings

  check-wasm:
    name: Check WASM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            components: clippy
            target: wasm32-unknown-unknown
            override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1

      - name: Install cargo-hack
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-hack
          version: 0.5

      - name: Checking wasm32 (v14)
        run: cargo hack check --manifest-path ./frame-metadata/Cargo.toml --feature-powerset --no-dev-deps --features v14 --skip legacy,v8,v9,v10,v11,v12,v13 --depth 4 --target wasm32-unknown-unknown

      - name: Checking wasm32 (all features)
        run: cargo hack check --manifest-path ./frame-metadata/Cargo.toml --feature-powerset --no-dev-deps --skip decode,serde_full --depth 4 --target wasm32-unknown-unknown

  check-features:
    name: Check Features
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust stable toolchain
        uses: actions-rs/toolchain@v1
        with:
            profile: minimal
            toolchain: stable
            components: clippy
            override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1

      - name: Install cargo-hack
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-hack
          version: 0.5

      - name: Checking v14 feature combinations (native)
        run: cargo hack check --manifest-path ./frame-metadata/Cargo.toml --feature-powerset --no-dev-deps --features v14 --skip legacy,v8,v9,v10,v11,v12,v13 --depth 4

      - name: Checking feature combinations excluding decode/serde_full (native)
        run: cargo hack check --manifest-path ./frame-metadata/Cargo.toml --feature-powerset --no-dev-deps --skip decode,serde_full --depth 4
